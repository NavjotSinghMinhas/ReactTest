{"version":3,"sources":["components/api-authorization/ApiAuthorizationConstants.js","components/api-authorization/AuthorizeService.js","components/api-authorization/LoginMenu.js","components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/api-authorization/AuthorizeRoute.js","components/api-authorization/Login.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","App.js","index.js"],"names":["QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","concat","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","authService","AuthorizeService","Object","classCallCheck","this","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","user","wrap","_context","prev","next","getUser","sent","abrupt","stop","apply","arguments","_getUser","_callee2","_context2","profile","ensureUserManagerInitialized","userManager","_getAccessToken","_callee3","_context3","access_token","_signIn","_callee4","state","silentUser","popUpUser","_context4","signinSilent","createArguments","updateState","success","t0","console","log","Error","signinPopup","t1","message","error","signinRedirect","redirect","t2","_x","_completeSignIn","_callee5","url","_context5","signinCallback","_x2","_signOut","_callee6","_context6","signoutPopup","undefined","signoutRedirect","_x3","_completeSignOut","_callee7","response","_context7","signoutCallback","data","_x4","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","_ensureUserManagerInitialized","_callee9","settings","_this","_context9","fetch","ok","json","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","_callee8","_context8","removeUser","get","LoginMenu","_Component","props","possibleConstructorReturn","getPrototypeOf","call","isAuthenticated","userName","inherits","_this2","_subscription","subscribe","populateState","unsubscribe","_populateState","_ref","_ref2","Promise","all","slicedToArray","setState","name","_this$state","profilePath","logoutPath","pathname","local","authenticatedView","registerPath","loginPath","anonymousView","react_default","createElement","react","reactstrap_es","tag","Link","className","to","Component","NavMenu","toggleNavbar","bind","assertThisInitialized","collapsed","light","onClick","isOpen","navbar","LoginMenu_LoginMenu","displayName","Layout","NavMenu_NavMenu","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","_populateWeatherData","token","getAccessToken","headers","Authorization","aria-labelledby","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","AuthorizeRoute","ready","authenticated","authenticationChanged","populateAuthenticationState","redirectUrl","encodeURI","window","location","_this$props","component","rest","objectWithoutProperties","es_Route","assign","render","_Component2","action","login","getReturnUrl","processLoginCallback","URLSearchParams","search","redirectToProfile","redirectToRegister","_login","returnUrl","result","signIn","navigateToReturnUrl","_processLoginCallback","completeSignIn","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","apiAuthorizationPath","replace","Logout","isReady","history","logout","processLogoutCallback","_logout","signOut","_processLogoutCallback","completeSignOut","_populateAuthenticationState","ApiAuthorizationRoutes","Route","path","loginAction","logoutAction","Login_Login","Logout_Logout","App","Layout_Layout","exact","AuthorizeRoute_AuthorizeRoute","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","BrowserRouter","basename","App_App"],"mappings":"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","file":"static/js/main.6371cd8e.chunk.js","sourcesContent":["export const ApplicationName = 'WebApplication4';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { ApplicationPaths, ApplicationName } from './ApiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    // We try to authenticate the user in three different ways:\r\n    // 1) We try to see if we can authenticate the user silently. This happens\r\n    //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n    //    on the client.\r\n    // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n    //    redirect flow.\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\r\n            this.updateState(silentUser);\r\n            return this.success(state);\r\n        } catch (silentError) {\r\n            // User might not be authenticated, fallback to popup authentication\r\n            console.log(\"Silent authentication error: \", silentError);\r\n\r\n            try {\r\n                if (this._popUpDisabled) {\r\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n                }\r\n\r\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\r\n                this.updateState(popUpUser);\r\n                return this.success(state);\r\n            } catch (popUpError) {\r\n                if (popUpError.message === \"Popup window closed\") {\r\n                    // The user explicitly cancelled the login action by closing an opened popup.\r\n                    return this.error(\"The user closed the window.\");\r\n                } else if (!this._popUpDisabled) {\r\n                    console.log(\"Popup authentication error: \", popUpError);\r\n                }\r\n\r\n                // PopUps might be blocked by the user, fallback to redirect\r\n                try {\r\n                    await this.userManager.signinRedirect(this.createArguments(state));\r\n                    return this.redirect();\r\n                } catch (redirectError) {\r\n                    console.log(\"Redirect authentication error: \", redirectError);\r\n                    return this.error(redirectError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={profilePath}>Hello {userName}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>Logout</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginMenu } from './api-authorization/LoginMenu';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">WebApplication4</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n                <LoginMenu>\r\n                </LoginMenu>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport authService from './api-authorization/AuthorizeService'\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const token = await authService.getAccessToken();\r\n    const response = await fetch('weatherforecast', {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(window.location.href)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<div>Processing login</div>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<div>Processing login callback</div>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<div></div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<div>{message}</div>);\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<div>Processing logout</div>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<div>Processing logout callback</div>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"You successfully logged out!\" });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport AuthorizeRoute from './components/api-authorization/AuthorizeRoute';\r\nimport ApiAuthorizationRoutes from './components/api-authorization/ApiAuthorizationRoutes';\r\nimport { ApplicationPaths } from './components/api-authorization/ApiAuthorizationConstants';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <AuthorizeRoute path='/fetch-data' component={FetchData} />\r\n        <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\n// Uncomment the line above that imports the registerServiceWorker function\r\n// and the line below to register the generated service worker.\r\n// By default create-react-app includes a service worker to improve the\r\n// performance of the application by caching static assets. This service\r\n// worker can interfere with the Identity UI, so it is\r\n// disabled by default when Identity is being used.\r\n//\r\n//registerServiceWorker();\r\n\r\n"],"sourceRoot":""}